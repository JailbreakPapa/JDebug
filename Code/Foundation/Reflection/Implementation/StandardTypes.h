#pragma once

/// \file

#include <Foundation/Reflection/Implementation/AbstractProperty.h>
#include <Foundation/Reflection/Implementation/DynamicRTTI.h>
#include <Foundation/Reflection/Implementation/RTTI.h>
#include <Foundation/Types/Variant.h>
#include <Foundation/Types/Interval.h>

WD_DECLARE_REFLECTABLE_TYPE(WD_FOUNDATION_DLL, wdEnumBase);
WD_DECLARE_REFLECTABLE_TYPE(WD_FOUNDATION_DLL, wdBitflagsBase);

WD_DECLARE_REFLECTABLE_TYPE(WD_FOUNDATION_DLL, wdReflectedClass);

// *********************************************
// ***** Standard POD Types for Properties *****

WD_DECLARE_REFLECTABLE_TYPE(WD_FOUNDATION_DLL, bool);

WD_DECLARE_REFLECTABLE_TYPE(WD_FOUNDATION_DLL, float);
WD_DECLARE_REFLECTABLE_TYPE(WD_FOUNDATION_DLL, double);

WD_DECLARE_REFLECTABLE_TYPE(WD_FOUNDATION_DLL, wdInt8);
WD_DECLARE_REFLECTABLE_TYPE(WD_FOUNDATION_DLL, wdUInt8);
WD_DECLARE_REFLECTABLE_TYPE(WD_FOUNDATION_DLL, wdInt16);
WD_DECLARE_REFLECTABLE_TYPE(WD_FOUNDATION_DLL, wdUInt16);
WD_DECLARE_REFLECTABLE_TYPE(WD_FOUNDATION_DLL, wdInt32);
WD_DECLARE_REFLECTABLE_TYPE(WD_FOUNDATION_DLL, wdUInt32);
WD_DECLARE_REFLECTABLE_TYPE(WD_FOUNDATION_DLL, wdInt64);
WD_DECLARE_REFLECTABLE_TYPE(WD_FOUNDATION_DLL, wdUInt64);

// macros won't work with 'const char*'
using wdConstCharPtr = const char*;
WD_DECLARE_REFLECTABLE_TYPE(WD_FOUNDATION_DLL, wdConstCharPtr);

WD_DECLARE_REFLECTABLE_TYPE(WD_FOUNDATION_DLL, wdTime);
WD_DECLARE_REFLECTABLE_TYPE(WD_FOUNDATION_DLL, wdColor);
WD_DECLARE_REFLECTABLE_TYPE(WD_FOUNDATION_DLL, wdColorBaseUB);
WD_DECLARE_REFLECTABLE_TYPE(WD_FOUNDATION_DLL, wdColorGammaUB);
WD_DECLARE_REFLECTABLE_TYPE(WD_FOUNDATION_DLL, wdColorLinearUB);
WD_DECLARE_REFLECTABLE_TYPE(WD_FOUNDATION_DLL, wdVec2);
WD_DECLARE_REFLECTABLE_TYPE(WD_FOUNDATION_DLL, wdVec3);
WD_DECLARE_REFLECTABLE_TYPE(WD_FOUNDATION_DLL, wdVec4);
WD_DECLARE_REFLECTABLE_TYPE(WD_FOUNDATION_DLL, wdVec2I32);
WD_DECLARE_REFLECTABLE_TYPE(WD_FOUNDATION_DLL, wdVec3I32);
WD_DECLARE_REFLECTABLE_TYPE(WD_FOUNDATION_DLL, wdVec4I32);
WD_DECLARE_REFLECTABLE_TYPE(WD_FOUNDATION_DLL, wdVec2U32);
WD_DECLARE_REFLECTABLE_TYPE(WD_FOUNDATION_DLL, wdVec3U32);
WD_DECLARE_REFLECTABLE_TYPE(WD_FOUNDATION_DLL, wdVec4U32);
WD_DECLARE_REFLECTABLE_TYPE(WD_FOUNDATION_DLL, wdQuat);
WD_DECLARE_REFLECTABLE_TYPE(WD_FOUNDATION_DLL, wdMat3);
WD_DECLARE_REFLECTABLE_TYPE(WD_FOUNDATION_DLL, wdMat4);
WD_DECLARE_REFLECTABLE_TYPE(WD_FOUNDATION_DLL, wdTransform);
WD_DECLARE_REFLECTABLE_TYPE(WD_FOUNDATION_DLL, wdBasisAxis);
WD_DECLARE_REFLECTABLE_TYPE(WD_FOUNDATION_DLL, wdUuid);
WD_DECLARE_REFLECTABLE_TYPE(WD_FOUNDATION_DLL, wdAngle);
WD_DECLARE_REFLECTABLE_TYPE(WD_FOUNDATION_DLL, wdFloatInterval);
WD_DECLARE_REFLECTABLE_TYPE(WD_FOUNDATION_DLL, wdIntInterval);

WD_DECLARE_REFLECTABLE_TYPE(WD_FOUNDATION_DLL, wdVariant);
WD_DECLARE_REFLECTABLE_TYPE(WD_FOUNDATION_DLL, wdString);
WD_DECLARE_REFLECTABLE_TYPE(WD_FOUNDATION_DLL, wdUntrackedString);
WD_DECLARE_REFLECTABLE_TYPE(WD_FOUNDATION_DLL, wdStringView);
WD_DECLARE_REFLECTABLE_TYPE(WD_FOUNDATION_DLL, wdDataBuffer);

// **********************************************************************
// ***** Various RTTI infos that can't be put next to their classes *****

WD_DECLARE_REFLECTABLE_TYPE(WD_FOUNDATION_DLL, wdTypeFlags);
WD_DECLARE_REFLECTABLE_TYPE(WD_FOUNDATION_DLL, wdPropertyFlags);
WD_DECLARE_REFLECTABLE_TYPE(WD_FOUNDATION_DLL, wdFunctionType);
WD_DECLARE_REFLECTABLE_TYPE(WD_FOUNDATION_DLL, wdVariantType);
WD_DECLARE_REFLECTABLE_TYPE(WD_FOUNDATION_DLL, wdPropertyCategory);
WD_DECLARE_REFLECTABLE_TYPE(WD_FOUNDATION_DLL, wdComparisonOperator);
