#pragma once

/// \file

#include <Foundation/Reflection/Implementation/AbstractProperty.h>
#include <Foundation/Reflection/Implementation/DynamicRTTI.h>
#include <Foundation/Reflection/Implementation/RTTI.h>
#include <Foundation/Types/Interval.h>
#include <Foundation/Types/Variant.h>

NS_DECLARE_REFLECTABLE_TYPE(NS_FOUNDATION_DLL, nsEnumBase);
NS_DECLARE_REFLECTABLE_TYPE(NS_FOUNDATION_DLL, nsBitflagsBase);

NS_DECLARE_REFLECTABLE_TYPE(NS_FOUNDATION_DLL, nsReflectedClass);

// *********************************************
// ***** Standard POD Types for Properties *****

NS_DECLARE_REFLECTABLE_TYPE(NS_FOUNDATION_DLL, bool);

NS_DECLARE_REFLECTABLE_TYPE(NS_FOUNDATION_DLL, float);
NS_DECLARE_REFLECTABLE_TYPE(NS_FOUNDATION_DLL, double);

NS_DECLARE_REFLECTABLE_TYPE(NS_FOUNDATION_DLL, nsInt8);
NS_DECLARE_REFLECTABLE_TYPE(NS_FOUNDATION_DLL, nsUInt8);
NS_DECLARE_REFLECTABLE_TYPE(NS_FOUNDATION_DLL, nsInt16);
NS_DECLARE_REFLECTABLE_TYPE(NS_FOUNDATION_DLL, nsUInt16);
NS_DECLARE_REFLECTABLE_TYPE(NS_FOUNDATION_DLL, nsInt32);
NS_DECLARE_REFLECTABLE_TYPE(NS_FOUNDATION_DLL, nsUInt32);
NS_DECLARE_REFLECTABLE_TYPE(NS_FOUNDATION_DLL, nsInt64);
NS_DECLARE_REFLECTABLE_TYPE(NS_FOUNDATION_DLL, nsUInt64);

// macros won't work with 'const char*'
using nsConstCharPtr = const char*;
NS_DECLARE_REFLECTABLE_TYPE(NS_FOUNDATION_DLL, nsConstCharPtr);

NS_DECLARE_REFLECTABLE_TYPE(NS_FOUNDATION_DLL, nsTime);
NS_DECLARE_REFLECTABLE_TYPE(NS_FOUNDATION_DLL, nsColor);
NS_DECLARE_REFLECTABLE_TYPE(NS_FOUNDATION_DLL, nsColorBaseUB);
NS_DECLARE_REFLECTABLE_TYPE(NS_FOUNDATION_DLL, nsColorGammaUB);
NS_DECLARE_REFLECTABLE_TYPE(NS_FOUNDATION_DLL, nsColorLinearUB);
NS_DECLARE_REFLECTABLE_TYPE(NS_FOUNDATION_DLL, nsVec2);
NS_DECLARE_REFLECTABLE_TYPE(NS_FOUNDATION_DLL, nsVec3);
NS_DECLARE_REFLECTABLE_TYPE(NS_FOUNDATION_DLL, nsVec4);
NS_DECLARE_REFLECTABLE_TYPE(NS_FOUNDATION_DLL, nsVec2I32);
NS_DECLARE_REFLECTABLE_TYPE(NS_FOUNDATION_DLL, nsVec3I32);
NS_DECLARE_REFLECTABLE_TYPE(NS_FOUNDATION_DLL, nsVec4I32);
NS_DECLARE_REFLECTABLE_TYPE(NS_FOUNDATION_DLL, nsVec2U32);
NS_DECLARE_REFLECTABLE_TYPE(NS_FOUNDATION_DLL, nsVec3U32);
NS_DECLARE_REFLECTABLE_TYPE(NS_FOUNDATION_DLL, nsVec4U32);
NS_DECLARE_REFLECTABLE_TYPE(NS_FOUNDATION_DLL, nsQuat);
NS_DECLARE_REFLECTABLE_TYPE(NS_FOUNDATION_DLL, nsMat3);
NS_DECLARE_REFLECTABLE_TYPE(NS_FOUNDATION_DLL, nsMat4);
NS_DECLARE_REFLECTABLE_TYPE(NS_FOUNDATION_DLL, nsTransform);
NS_DECLARE_REFLECTABLE_TYPE(NS_FOUNDATION_DLL, nsBasisAxis);
NS_DECLARE_REFLECTABLE_TYPE(NS_FOUNDATION_DLL, nsUuid);
NS_DECLARE_REFLECTABLE_TYPE(NS_FOUNDATION_DLL, nsAngle);
NS_DECLARE_REFLECTABLE_TYPE(NS_FOUNDATION_DLL, nsFloatInterval);
NS_DECLARE_REFLECTABLE_TYPE(NS_FOUNDATION_DLL, nsIntInterval);

NS_DECLARE_REFLECTABLE_TYPE(NS_FOUNDATION_DLL, nsVariant);
NS_DECLARE_REFLECTABLE_TYPE(NS_FOUNDATION_DLL, nsVariantArray);
NS_DECLARE_REFLECTABLE_TYPE(NS_FOUNDATION_DLL, nsVariantDictionary);
NS_DECLARE_REFLECTABLE_TYPE(NS_FOUNDATION_DLL, nsString);
NS_DECLARE_REFLECTABLE_TYPE(NS_FOUNDATION_DLL, nsUntrackedString);
NS_DECLARE_REFLECTABLE_TYPE(NS_FOUNDATION_DLL, nsStringView);
NS_DECLARE_REFLECTABLE_TYPE(NS_FOUNDATION_DLL, nsDataBuffer);
NS_DECLARE_REFLECTABLE_TYPE(NS_FOUNDATION_DLL, nsHashedString);
NS_DECLARE_REFLECTABLE_TYPE(NS_FOUNDATION_DLL, nsTempHashedString);

// **********************************************************************
// ***** Various RTTI infos that can't be put next to their classes *****

NS_DECLARE_REFLECTABLE_TYPE(NS_FOUNDATION_DLL, nsTypeFlags);
NS_DECLARE_REFLECTABLE_TYPE(NS_FOUNDATION_DLL, nsPropertyFlags);
NS_DECLARE_REFLECTABLE_TYPE(NS_FOUNDATION_DLL, nsFunctionType);
NS_DECLARE_REFLECTABLE_TYPE(NS_FOUNDATION_DLL, nsVariantType);
NS_DECLARE_REFLECTABLE_TYPE(NS_FOUNDATION_DLL, nsPropertyCategory);
NS_DECLARE_REFLECTABLE_TYPE(NS_FOUNDATION_DLL, nsComparisonOperator);
